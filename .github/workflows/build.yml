name: Build and Publish

on:
  push:
    branches:
      - main  # Ajuste para a branch principal do seu repositório
      - 'feat/*'  # Incluir branches de feature
      - 'feature/*'  # Incluir branches de feature
      - 'bugfix/*'  # Incluir branches de bugfix

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4  # Usa a ação para fazer checkout do código-fonte

      - name: Set up JDK  # Exemplo de configuração do ambiente Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt-openj9' # Veja 'Supported distributions' para opções disponíveis
          java-version: '21'  # Define a versão do JDK
          cache: 'maven' # Habilita cache ao maven

      - name: Test with Maven  # Teste com Maven
        run: mvn test  # Comando para executar o teste com Maven

      - name: Build with Maven  # Build com Maven
        run: mvn clean install  # Comando para executar o build com Maven

  test:
    name: Test and Coverage
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    if: github.event_name == 'pull_request'  # Executar em PRs e branches

    steps:
      - name: Checkout
        uses: actions/checkout@v4  # Usa a ação para fazer checkout do código-fonte

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-

      - name: Set up JDK  # Exemplo de configuração do ambiente Java
        uses: actions/setup-java@v4
        with:
          distribution: 'adopt-openj9' # Veja 'Supported distributions' para opções disponíveis
          java-version: '21'  # Define a versão do JDK
          cache: 'maven' # Habilita cache ao maven

      - name: Run Tests and Generate Coverage Report
        run: mvn verify  # Comando para executar os testes e gerar o relatório de cobertura

      - name: Add coverage to PR
        id: jacoco
        uses: madrapps/jacoco-report@v1.6.1
        with:
          paths: |
            ${{ github.workspace }}/target/jacoco-report/jacoco.xml
          token: ${{ secrets.GITHUB_TOKEN }}
          min-coverage-overall: 40
          min-coverage-changed-files: 80

      - name: Fail PR if overall coverage is less than 80%
        if: ${{ steps.jacoco.outputs.coverage-overall < 80.0 }}
        uses: actions/github-script@v6
        with:
          script: |
            core.setFailed('Overall coverage is less than 80%!')